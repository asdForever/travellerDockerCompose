version: "3.3"

networks:
  backend-tier:
    driver: bridge

services:
  mongo:
    container_name: "traveller_mongo"
    image: "mongo"
    external_links:
      - mongo:5.0.8
    ports:
      - 27017:27017
    restart: on-failure
    networks:
      - backend-tier

  rabbitmq:
    container_name: "traveller_rabbitmq"
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672    #amqp
      - 15672:15672  #http
    # volumes:
    #   - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #   - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    restart: on-failure
    networks:
      - backend-tier

  traveller_storage:
    image: "sorokinandrey/traveller_storage:latest"
    external_links:
      - sorokinandrey:traveller_storage
    ports:
      - 8081:8081
    environment:
      spring.data.mongodb.host: traveller_mongo
      spring.data.mongodb.port: 27017
      spring.rabbitmq.host: traveller_rabbitmq
      spring.rabbitmq.port: 5672
    restart: on-failure
    networks:
      - backend-tier
    depends_on:
      - mongo
      - rabbitmq

  traveller_importer:
    image: "sorokinandrey/traveller_importer:latest"
    external_links:
      - sorokinandrey:traveller_importer
    ports:
      - 8082:8082
    environment:
      spring.rabbitmq.host: traveller_rabbitmq
      spring.rabbitmq.port: 5672
    restart: on-failure
    networks:
      - backend-tier
    depends_on:
      - rabbitmq
      - traveller_storage